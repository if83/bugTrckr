<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.softserverinc.edu</groupId>
    <artifactId>bugtrckr</artifactId>
    <packaging>war</packaging>
    <version>0.5.0-SNAPSHOT</version>
    <name>BugTrckr Webapp</name>
    <url>http://maven.apache.org</url>

    <properties>
        <java-version>1.8</java-version>
        <servlet-version>3.1.0</servlet-version>
        <jsp-version>2.3.1</jsp-version>
        <jstl-version>1.2</jstl-version>
        <apache-tiles-version>3.0.5</apache-tiles-version>
        <spring-version>4.3.2.RELEASE</spring-version>
        <spring-security-version>4.1.3.RELEASE</spring-security-version>
        <spring-security-test-vertion>4.1.3.RELEASE</spring-security-test-vertion>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--Logging-->
        <logback-classic-version>1.1.7</logback-classic-version>
        <slf4j-version>1.7.21</slf4j-version>

        <!--Database-->
        <jdbc-driver-version>6.0.3</jdbc-driver-version>
        <spring-data-jpa-version>1.10.2.RELEASE</spring-data-jpa-version>

        <!--Hibernate-->
        <hibernate-version>5.0.9.Final</hibernate-version>
        <hibernate-search-version>5.5.4.Final</hibernate-search-version>

        <!--Maven plugins-->
        <maven-war-plugin-version>2.6</maven-war-plugin-version>
        <maven-compiler-plugin-version>3.5.1</maven-compiler-plugin-version>
        <maven-sql-plugin-version>1.5</maven-sql-plugin-version>
        <commons-lang3-version>3.0</commons-lang3-version>
        <!-- TestNG -->
        <testng-version>6.9.10</testng-version>
        <!--Mockito-->
        <mockito-version>1.10.19</mockito-version>
    </properties>

    <dependencies>

        <!-- Servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>${jsp-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl-version}</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!-- Logging-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic-version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j-version}</version>
        </dependency>

        <!--Apache Tiles-->
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-extras</artifactId>
            <version>${apache-tiles-version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>javassist</artifactId>
                    <groupId>jboss</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- MySQL JDBC connector -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${jdbc-driver-version}</version>
        </dependency>

        <!-- Spring -->
        <!-- This library responsible for:
        Open the connection.
        Prepare and execute the statement.
        Process any exception.
        Handle transactions.
        Close the connection, statement and resultset. -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!--
           It  supports integration with Hibernate, Java Persistence API (JPA) and Java Data Objects (JDO)
            for resource management, data access object (DAO) implementations, and transaction strategies.
            Benefits of using it
               Common data access exceptions. Spring can wrap exceptions from your ORM tool
               General resource management. Spring application contexts can handle the location
                and configuration of Hibernate SessionFactory instances, JPA EntityManagerFactory instances,
               JDBC DataSource instances,
        -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!-- Spring Data Jpa -->
        <!--
            makes it easy to easily implement JPA based repositories.
            This module deals with enhanced support for JPA based data access layers
            Simplifying to execute simple queries as well as perform pagination, and auditing
        -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${spring-data-jpa-version}</version>
        </dependency>

        <!-- Hibernate -->
        <!--
        It standardizes the basic APIs and the metadata needed for any object/relational persistence mechanism.
        Hibernate EntityManager implements the programming interfaces and lifecycle rules as defined
        by the JPA 2.0 specification (transparent object/relational mapping)
        -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate-version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-orm</artifactId>
            <version>${hibernate-search-version}</version>
        </dependency>

        <!-- Infinispan integration: -->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-directory-provider</artifactId>
            <version>8.1.0.Final</version>
        </dependency>

        <!--Bean and form validation enabled by spring @EnableWebMvc annotation-->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.1.0.Final</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.2.4.Final</version>
        </dependency>

        <!-- Assists in creating consistent equals(Object), toString(), hashCode(), and compareTo(Object) methods -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3-version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.testng/testng -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng-version}</version>
        </dependency>

        <!-- Apache Commons Upload -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.2</version>
        </dependency>


        <!-- Apache Commons Upload -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.10</version>
        </dependency>

        <!-- org.springframework.security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring-security-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
            <version>${spring-security-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring-security-test-vertion}</version>
        </dependency>

        <!-- For working with JSON objects -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.8.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.1</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.5.3</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-all -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito-version}</version>
        </dependency>

        <!--JUnit test library-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <plugins>

            <!--Properties-maven-plugin-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <fileImage>src/main/resources/application.properties</fileImage>
                                <fileImage>src/main/resources/sql_maven_plugin.properties</fileImage>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <!-- Web.xml is not required with Servlet 3.0+ specification -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <warSourceDirectory>${project.basedir}/src/main/webapp/WEB-INF</warSourceDirectory>
                    <webResources>
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>${project.basedir}/src/main/webapp/WEB-INF/resources</directory>
                            <targetPath>WEB-INF/resources</targetPath>
                        </resource>
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>${project.basedir}/src/main/webapp/WEB-INF/layouts</directory>
                            <targetPath>WEB-INF/layouts</targetPath>
                        </resource>
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>${project.basedir}/src/main/webapp/WEB-INF/views</directory>
                            <targetPath>WEB-INF/views</targetPath>
                        </resource>
                    </webResources>
                </configuration>
                <version>${maven-war-plugin-version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin-version}</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>

            <!--Sql-maven-plugin-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>${maven-sql-plugin-version}</version>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${jdbc-driver-version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <driver>${jdbc.driverClass}</driver>
                    <url>${jdbc.url}</url>
                    <username>${jdbc.username}</username>
                    <password>${jdbc.password}</password>
                    <skip>false</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>drop-database</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <skip>${drop-database}</skip>
                            <autocommit>true</autocommit>
                            <url>${jdbc.service.url}</url>
                            <srcFiles>
                                <srcFile>${project.basedir}/src/main/resources/dbscripts/drop_db_bugtrckr.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-database</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <skip>${create-database}</skip>
                            <autocommit>true</autocommit>
                            <url>${jdbc.service.url}</url>
                            <srcFiles>
                                <srcFile>${project.basedir}/src/main/resources/dbscripts/create_db_bugtrckr.sql
                                </srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-tables</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <skip>${create-tables}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>
                                    ${project.basedir}/src/main/resources/dbscripts/01_#create_db_bugtrckr_tables.sql
                                </srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>fill-in-the-tables</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <skip>${fill-in-the-tables}</skip>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>
                                    ${project.basedir}/src/main/resources/dbscripts/02_#refdata_insert_admin_user.sql
                                </srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- RPM maven plugin  -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>rpm-maven-plugin</artifactId>
              <version>2.2.0</version>
              <extensions>true</extensions>
              <executions>
                <execution>
                  <id>attach-rpm</id>
                  <goals>
                    <goal>attached-rpm</goal>
                  </goals>
                </execution>
              </executions>

              <configuration>
                <group>Application/Collectors</group>
                <mappings>
                  <mapping>
                    <directoryIncluded>false</directoryIncluded>
                    <directory>/var/lib/tomcat/webapps</directory>
                    <username>tomcat</username>
                    <groupname>tomcat</groupname>
                    <sources>
                      <source>
                        <location>${project.basedir}/target/*.war</location>
                      </source>
                    </sources>
                  </mapping>
                </mappings>
                    <!--<directory>/home/tomcat/wars</directory>
                      <filemode>755</filemode>
                      <username>${rpm.file.owner}</username>
                      <groupname>${rpm.file.owner}</groupname>

                      The following adtifact/classifiers/classifier voodoo is required to get the
                      projects main artifact into the rpm (and only the main artifact, without the
                      test artifact.
                      See http://mojo.codehaus.org/rpm-maven-plugin/map-params.html#artifact

                      <artifact>
                        <classifiers>
                          <classifier/>
                        </classifiers>
                      </artifact>
                    </mapping>
                  </mappings>
                  <preinstallScriptlet>
                    <script>/etc/init.d/tomcat5 stop</script>
                  </preinstallScriptlet>
                  <postinstallScriptlet>
                    <script>
                      echo "removing ${apps.deploy.directory}"
                      rm -rf ${apps.deploy.directory}
                      echo "removing ${tomcat.work.directory}/*"
                      rm -rf ${tomcat.work.directory}/*
                      /etc/init.d/tomcat5 start
                    </script>
                  </postinstallScriptlet> -->
               </configuration>
            </plugin>
        </plugins>
    </build>
</project>
